name: DotNET Core Build
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Set up DotNET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |-
          6.0.x
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        additionalArguments: /overrideconfig mode=Mainline
    - name: Install Dependencies
      run: dotnet restore
      shell: bash
    - name: Test
      run: dotnet test -l:trx
      shell: bash
    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: DotNET Tests
        path: '**/*.trx'
        reporter: dotnet-trx
        fail-on-error: 'false'
    - name: Publish
      run: dotnet publish --configuration Release /p:AssemblyVersion=${{ steps.determine_version.outputs.assemblySemVer }} -o ./publish
    - id: package
      name: Package
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: 'RandomQuotes'
        version: '${{ steps.determine_version.outputs.semVer }}'
        base_path: 'publish'
        output_folder: 'artifacts'
    - name: Push packages to Octopus Deploy
      uses: OctopusDeploy/push-package-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
        OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER_URL }}
      with:
        packages: artifacts/*.zip
        overwrite_mode: OverwriteExisting
    - name: Generate Octopus Deploy build information
      uses: OctopusDeploy/push-build-information-action@v3
      env:
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
        OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER_URL }}
      with:
        version: ${{ steps.determine_version.outputs.semVer }}
        packages: RandomQuotes
        overwrite_mode: OverwriteExisting
    - name: Create Octopus Release
      uses: OctopusDeploy/create-release-action@v3
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        project: RandomQuotes
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
